@model FH_Kiel_Ticketing_App.Models.Proposal
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_CustomLayout.cshtml";
}

<div class="page-header">
    <h1>Proposal submission wizard</h1>
</div>
<div id="rootwizard">
    <div class="navbar">
        <div class="navbar-inner">
            <div class="container">
                <ul>
                    <li name="FirstTab"><a href="#tab1" data-toggle="tab">Project Name and Abstract</a></li>
                    <li><a href="#tab2" data-toggle="tab">Introduction</a></li>
                    <li><a href="#tab3" data-toggle="tab">Abstract</a></li>
                    <li><a href="#tab4" data-toggle="tab">Introduction</a></li>
                    <li><a href="#tab5" data-toggle="tab">Overall Description</a></li>
                    <li><a href="#tab6" data-toggle="tab">Requirements</a></li>
                    <li><a href="#tab7" data-toggle="tab">Results</a></li>
                    <li><a href="#tab8" data-toggle="tab"> Find supervisor</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div id="bar" class="progress">
        <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
    </div>
    <div class="tab-content">
        <div class="tab-pane" id="tab1">


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.nameOfProject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nameOfProject, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ticketing App" } })
                    @Html.ValidationMessageFor(model => model.nameOfProject, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.abstrac, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.abstrac, 4, 40, new { @placeholder = "A platform for Fachhochschule Kiel students where they can offer help to other students who need help with any subjects they are having difficulties with. Along with that, each student can also view their classes for the semester based on the courses using the system’s automated algorithm", htmlAttributes = new { @style = "width: 450px;", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.abstrac, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <div class="tab-pane" id="tab2">

            <div class="form-group">
                @Html.LabelFor(model => model.introduction, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.introduction, 4, 40, new { @placeholder = "The purpose of this document is to give an abstract level idea about the basic needs and requirements for Project Koh. The general idea of what the system is supposed to do and offer. Furthermore, how the application will achieve its main goal. This document does not contain complete information for the Project and is only to provide an overview of the idea that the authors would like to work on therefore it shall be named afterwards when the formal proposal is constructed.", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.introduction, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>


        <div class="tab-pane" id="tab3">
            <div class="form-group">
                @Html.LabelFor(model => model.overallDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.overallDescription, 4, 40, new { @placeholder = "This system will be completely web-based, linking to the database and the web server from a standard web browser. An Internet connection is necessary to access the system.", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.overallDescription, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="tab-pane" id="tab4">
            <div class="form-group">
                @Html.LabelFor(model => model.functionalRequirements, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.functionalRequirements, 4, 40, new { @placeholder = "Functional requirements of Project Koh are as follows:1.System shall allow users to post questions regarding their problems.2.System shall let users post answers against questions asked.3.System shall let users send personal messages to other users.4.System shall allow users to maintain a profile.", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.functionalRequirements, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>


        <div class="tab-pane" id="tab5">
            <div class="form-group">
                @Html.LabelFor(model => model.nonFunctionalRequirements, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.nonFunctionalRequirements, 4, 40, new { @placeholder = "The website must be compatible with some of the most commonly used web browsers like Firefox, Google Chrome, and Internet Explorer. The user interface must be readable and well organized.", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nonFunctionalRequirements, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="tab-pane" id="tab6">
            <div class="form-group">
                @Html.LabelFor(model => model.projectTechnologies, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.projectTechnologies, 4, 40, new { @placeholder = "The system may use the following technologies: 1.Programming Languages: C# / Javascript2.UML Modeling: Microsoft Visio3.Development Environment: Microsoft Visual Studio / Webstorm / IntelliJ4.Database: Microsoft SQL Server(MS SQL) / MongoDB5.Software Development Cycle: V - Model", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.projectTechnologies, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="tab-pane" id="tab7">
            <div class="form-group">
                @Html.LabelFor(model => model.result, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.result, 4, 40, new { @placeholder = "Each year there are new students in different program and these students usually face a lot of different challenges. These students are usually from different educational backgrounds and some may be able to perform better than the others based on their area of interest or expertise. Apart from this, the semester plan provided is split into five (one compulsory, four electives) PDF documents. It is a strain at the start of the semester to go through all five of these documents and get familiar with your schedule. This is where Project Koh comes in and attempts to provide a solution. It will be an application that helps student connect with each other and help each other out. The application will act as a separate community where the students can seek out for help or offer help to other students if need be. Furthermore, the application will hold your own profile where you can see your class schedule generated by the system. The system will also manage to send in emails for classes as a reminder to the users.", htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.result, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="tab-pane" id="tab8">
            Fick dich
        </div>
        <ul class="pager wizard">
            <li class="previous first" style="display:none;"><a href="#">First</a></li>
            <li class="previous"><a href="#">Previous</a></li>
            <li class="next last" style="display:none;"><a href="#">Last</a></li>
            <li class="next"><a href="#">Next</a></li>
        </ul>
    </div>
</div>

<script>

    $('.next').click(function () {

        var nextId = $(this).parents('.tab-pane').next().attr("id");
        $('[href=#' + nextId + ']').tab('show');
        return false;

    })

    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {

        //update progress
        var step = $(e.target).data('step');
        var percent = (parseInt(step) / 5) * 100;

        $('.progress-bar').css({ width: percent + '%' });
        $('.progress-bar').text("Step " + step + " of 5");

        //e.relatedTarget // previous tab

    })

    $('.first').click(function () {

        $('#myWizard a:first').tab('show')

    })
</script>